interface Iprofile{
  name: string;
  age: number;
  school: string;
  hobby?:string;
}

partail 타입
ex: type= aaa = partial<Iprofile>; 
Iprofile에 있는 객체들을 모두 ?? 있어도 되고 없어도 되는 타입스크립트

//2. Reqyured 타입

type bbb = Required<Iprofile>
Iprofile에 있는 객체들을 모두 필수로 변경


3. Pick 타입
type ccc = Pick<Iprofile,"name" | "age">
객체 안에 있는 것을 선택 

4. Omit 타입
type ddd= Omit<Iprofile,"school">;
Iprofile에 school 제외하고 표시한다.

5.Record 타입 
type eee = "철수" | "영희" | "훈이"
let child1: eee =는 철수 영희 훈이만 된다. 
let child2:String = "사과" 다된다. 

type fff =Record <eee,Iprofile>
ex: 철수:Iprofile

6. 객체의 key들로 union 타입 만들기 
type ggg= keyof Iprofile;
let myprofile: ggg =" hobby"


7. type vs interface 차이 
interface = 선언병합 가능 
interface Iprofile{
  candy:number;
}

8. 응용
let profile: Partial<Iprofile> ={ // 타입 변경하는것 
  candy:10,
}